{"name": "GET an existing booking from GET all bookingid's", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'NewFisrtName' == 'NewFirstName'\n  \n  - NewFirstName\n  ?       -\n  + NewFisrtName\n  ?      +", "trace": "create_token = '6e6cedbfb45a9cf'\n\n    @allure.title(\"GET an existing booking from GET all bookingid's\")\n    @allure.description(\"TC#3 GET an existing booking from GET all bookingid's , \"\n                        \"Update a booking with that id, Verify with GET request that it is updated\")\n    @pytest.mark.integration\n    \n    def test_get_update_verify_all_bookings_id(create_token):\n        base_url = \"https://restful-booker.herokuapp.com/booking/\"\n    \n    \n        #Step 1- Get all bookings\n    \n        get_url = base_url\n        response = requests.get(url=get_url)\n        assert response.status_code == 200\n        all_bookings = response.json()\n    \n        #Ensure list is not empty\n        assert len(all_bookings) != 0\n        #print(all_bookings)\n    \n        #Get 1st booking Id\n        bookingid = all_bookings[0][\"bookingid\"]\n        print(\"First booking ID is:\", bookingid)\n        #return booking_id\n    \n        # Step 2- Update 1st booking\n        update_url = base_url + str(bookingid)\n        cookie = \"token=\" + create_token\n        headers= {\n            \"Content-Type\": \"application/json\",\n            \"Cookie\": cookie\n        }\n        update_payload = {\n            \"firstname\": \"NewFisrtName\",\n            \"lastname\": \"NewLastName\",\n            \"bookingdates\": {\n                \"checkin\": \"2018-02-10\",\n                \"checkout\": \"2019-02-15\"\n            }\n        }\n        update_response = requests.patch(url=update_url, headers=headers, json=update_payload)\n        assert update_response .status_code == 200\n    \n        # Step 3- Verify the update\n        get_update_response = requests.get(url=update_url)\n        update_data = get_update_response.json()\n>       assert update_data[\"firstname\"] == \"NewFirstName\"\nE       AssertionError: assert 'NewFisrtName' == 'NewFirstName'\nE         \nE         - NewFirstName\nE         ?       -\nE         + NewFisrtName\nE         ?      +\n\nex02_July\\Exercise 26072024\\Integration\\test_integration_TC3.py:54: AssertionError"}, "description": "TC#3 GET an existing booking from GET all bookingid's , Update a booking with that id, Verify with GET request that it is updated", "start": 1723030812515, "stop": 1723030815247, "uuid": "c3bd9996-1a69-4b2e-a500-18969ede443a", "historyId": "485bc7403e732cc6929e6d36f4fda3f7", "testCaseId": "485bc7403e732cc6929e6d36f4fda3f7", "fullName": "ex02_July.Exercise 26072024.Integration.test_integration_TC3#test_get_update_verify_all_bookings_id", "labels": [{"name": "tag", "value": "integration"}, {"name": "parentSuite", "value": "ex02_July.Exercise 26072024.Integration"}, {"name": "suite", "value": "test_integration_TC3"}, {"name": "host", "value": "DESKTOP-DR477QI"}, {"name": "thread", "value": "5368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ex02_July.Exercise 26072024.Integration.test_integration_TC3"}]}